# vim:filetype=lua

lib/libluacontrol.so

lib/libdbgprinter.so

lib/libcpuload.so

lib/libmemory.so

lib/libnet_ip.so

==
luacontrol
==
package.path = package.path .. ';./lib/?.lua'
package.cpath = package.cpath .. ';./lib/lib?.so;'
dmm = require("dmm")
ffi = require("ffi")
-- S = require("posix.sys.socket")
-- FC = require("posix.fcntl")
-- bit = require("bit")

dmm.ll_ipath = dmm.ll_ipath .. ';lib/?.i'
dmm.hl_ipath = dmm.hl_ipath .. ';lib/?.lua'
local Dbgprinter = assert(dmm.require_interface('dbgprinter'))

local cpuload = dmm.Module:new('cpuload')
local memory = dmm.Module:new('memory')
local dbgprinter = Dbgprinter:new()

dbgprinter:set(500, 509, 'float') -- cpuload
dbgprinter:set(520, 564, 'uint64_t') -- memory

cpuload:connect('out', dbgprinter, 'in')
memory:connect('out', dbgprinter, 'in')

local timer = dmm.Timer:new()

-- local net_ip_send = Net_ip.Send:new()
-- net_ip_send:createsock(Net_ip.AF_INET, Net_ip.SOCK_DGRAM, 0)
-- net_ip_send:connect('127.0.0.1:3457')

-- cpuload:connect('out', net_ip_send, 'in');
-- memory:connect('out', net_ip_send, 'in');

-- local net_ip_recv = Net_ip.Recv:new()

-- net_ip_recv:createsock(Net_ip.AF_INET, Net_ip.SOCK_DGRAM, 0)
-- net_ip_recv:bind('127.0.0.1:3457')

-- net_ip_recv:connect('out', dbgprinter.nodeid, 'in')

timer:setperiodic(1, 0)
cpuload:timer_subscribe(timer)
memory:timer_subscribe(timer)

