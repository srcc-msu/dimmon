# vim:filetype=lua

lib/libluacontrol.so

lib/libdbgprinter.so

lib/libcpuload.so

lib/libmemory.so

lib/libaggregateall.so

lib/libnet_ip.so

==
luacontrol
==
package.path = package.path .. ';./lib/?.lua;/home/coctic/soft/luaposix/lib/?.lua;/home/coctic/soft/luaposix/lib/?/init.lua'
package.cpath = package.cpath .. ';./lib/lib?.so;/home/coctic/soft/luaposix/linux/?.so'
dmm = require("dmm")
ffi = require("ffi")
bit = require("bit")

dmm.interface_path = dmm.interface_path .. ';lib/?.i'
assert(dmm.require_interface('dbgprinter'))

local cpuload = dmm.node_create('cpuload')
local memory = dmm.node_create('memory')
local dbgprinter = dmm.node_create('dbgprinter')
local aggregateall = dmm.node_create('aggregateall')


dmm.node_connect(cpuload, 'out', dbgprinter, 'in')
dmm.node_connect(cpuload, 'out', aggregateall, 'in')
dmm.node_connect(memory, 'out', dbgprinter, 'in')
dmm.node_connect(aggregateall, 'out', dbgprinter, 'in')
dmm.node_connect(memory, 'out', dbgprinter, 'in')

local msg, set = dmm.msg_create {
  len = dmm.sfam.struct_sizeof('struct dmm_msg_dbgprinter_set', 'descs', 20),
  payload_type = 'struct dmm_msg_dbgprinter_set',
  type = ffi.C.DMM_MSGTYPE_DBGPRINTER,
  cmd = ffi.C.DMM_MSG_DBGPRINTER_SET,
}
local cnt = 0
for i = 500, 509 do
  set.descs[cnt] = {i, ffi.C.DBGPRINTER_FLOAT}
  cnt = cnt + 1
end
for i = 800, 809 do
  set.descs[cnt] = {i, ffi.C.DBGPRINTER_FLOAT}
  cnt = cnt + 1
end

dmm.msg_send(dbgprinter, msg)

local timer1s = dmm.timer_create()
local timer5s = dmm.timer_create()

dmm.timer_setperiodic(timer1s, 1, 0)
dmm.timer_setperiodic(timer5s, 5, 0)
dmm.timer_subscribe(cpuload, timer1s)
dmm.timer_subscribe(aggregateall, timer5s)
